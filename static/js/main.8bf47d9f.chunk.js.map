{"version":3,"sources":["context/ThemeContext.js","components/Header.jsx","components/Search.jsx","hooks/useCharacters.js","components/Characters.jsx","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","Header","useContext","darkMode","setDarkMode","className","cursor","icon","faToggleOn","faToggleOff","onClick","Search","search","searchInput","handleSearch","type","placeholder","value","ref","onChange","useCharacters","url","useState","characters","setCharacters","useEffect","fetch","then","response","json","data","results","initialState","favorites","favoriteReducer","state","action","payload","filter","favorite","Characters","useReducer","dispatch","setSearch","useRef","isCharacterInFavorites","find","character","id","useCallback","current","filteredUsers","useMemo","user","name","toLowerCase","includes","length","map","src","image","alt","faStarSolid","faStarRegular","status","species","gender","App","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAIeA,G,MAFMC,IAAMC,cAAc,O,cC0B1BC,EAvBA,WAAO,IAAD,EACeC,qBAAWJ,GAApCK,EADU,EACVA,SAAUC,EADA,EACAA,YAMjB,OACI,sBAAKC,UAAU,SAAf,UACI,4CACA,oBAAGA,UAAU,WAAb,UACI,4CACA,cAAC,IAAD,CACIC,OAAO,UACPD,UAAU,SACVE,KAAMJ,EAAWK,IAAYC,IAC7BC,QAbI,WAChBN,GAAaD,a,eCCNQ,EARA,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAClC,OACI,8BACI,uBAAQT,UAAU,SAASU,KAAK,OAAOC,YAAY,YAAYC,MAAOL,EAAQM,IAAKL,EAAaM,SAAUL,OCSvGM,EAZO,SAAAC,GAAQ,IAAD,EACWC,mBAAS,IADpB,mBAClBC,EADkB,KACNC,EADM,KASzB,OANAC,qBAAU,WACNC,MAAML,GACLM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIN,EAAcM,EAAKC,cAClC,CAACV,IAEGE,G,QCJLS,EAAe,CACjBC,UAAW,IAGTC,EAAkB,SAACC,EAAOC,GAC5B,OAAOA,EAAOrB,MACV,IAAK,kBACD,OAAO,2BACAoB,GADP,IAEIF,UAAU,GAAD,mBAAME,EAAMF,WAAZ,CAAuBG,EAAOC,YAE/C,IAAK,uBACD,kCACOF,GADP,IAEIF,UAAU,YACHE,EAAMF,UAAUK,QAAO,SAACC,GAAD,OAAcA,IAAaH,EAAOC,cAGxE,QACI,OAAOF,IAsEJK,EAlEI,WAAO,IAAD,EACSC,qBAAWP,EAAiBF,GADrC,mBACdC,EADc,KACHS,EADG,OAEOpB,mBAAS,IAFhB,mBAEdV,EAFc,KAEN+B,EAFM,KAGf9B,EAAc+B,iBAAO,MAErBrB,EAAaH,EAzBX,8CAkCFyB,EAAyB,SAACN,GAAD,OAC3BN,EAAUA,UAAUa,MAAK,SAACC,GAAD,OAAeA,EAAUC,KAAOT,EAASS,OAGhElC,EAAemC,uBAAY,WAC7BN,EAAU9B,EAAYqC,QAAQjC,SAC/B,IAEGkC,EAAgBC,mBAAQ,kBAC1B7B,EAAWe,QAAO,SAACe,GACf,OAAOA,EAAKC,KAAKC,cAAcC,SAAS5C,EAAO2C,oBAEnD,CAAChC,EAAYX,IAGjB,OACI,sBAAKP,UAAU,aAAf,UACI,uDACC4B,EAAUA,UAAUwB,OAAS,EAC3BxB,EAAUA,UAAUyB,KAAI,SAAAnB,GAAQ,OAC/B,6BAAuBA,EAASe,MAAvBf,EAASS,OAEhB,8CAGN,cAAC,EAAD,CAAQpC,OAAQA,EAAQC,YAAaA,EAAaC,aAAcA,IAEhE,qBAAKT,UAAU,YAAf,SACK8C,EAAcO,KAAI,SAAAX,GAAS,OACxB,sBAAK1C,UAAU,OAAf,UACI,qBAAKsD,IAAKZ,EAAUa,MAAOC,IAAKd,EAAUO,KAAMjD,UAAU,UAC1D,qBAAIA,UAAU,OAAd,UACK0C,EAAUO,KAEX,cAAC,IAAD,CACIjD,UAAU,WACVE,KAAQsC,EAAuBE,GAAae,IAAcC,IAC1DrD,QAAS,WA5CjB,IAAA6B,EAChBG,EAAS,CACL3B,KAAQ8B,EAFIN,EA4CmCQ,GA1CJ,uBAAyB,kBACpEV,QAASE,UA4CG,sBAAKlC,UAAU,OAAf,UACI,yCAAY0C,EAAUiB,UACtB,yCAAYjB,EAAUkB,WACtB,yCAAYlB,EAAUmB,eAdHnB,EAAUC,aCrD1CmB,MAdf,WAAgB,IAAD,EACmB7C,oBAAS,GAD5B,mBACNnB,EADM,KACIC,EADJ,KAGb,OACE,cAAC,EAAagE,SAAd,CAAuBnD,MAAO,CAACd,WAAUC,eAAzC,SACE,sBAAKC,UAAS,cAASF,EAAW,OAAS,SAA3C,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCDOkE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8bf47d9f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ThemeContext = React.createContext(null);\r\n\r\nexport default ThemeContext;\r\n","import React, { useContext } from 'react'\r\nimport ThemeContext from '../context/ThemeContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faToggleOn, faToggleOff} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Header = () => {\r\n    const {darkMode, setDarkMode} = useContext(ThemeContext);\r\n \r\n    const handleClick = () => {\r\n        setDarkMode(!darkMode);\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>ReactHooks</h1>\r\n            <p className=\"darkmode\">\r\n                <span>DarkMode</span>\r\n                <FontAwesomeIcon \r\n                    cursor=\"pointer\"\r\n                    className=\"toggle\" \r\n                    icon={darkMode ? faToggleOn :faToggleOff}  \r\n                    onClick={handleClick}\r\n                />\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nconst Search = ({search, searchInput, handleSearch}) => {\r\n    return (\r\n        <div>\r\n            <input  className=\"search\" type=\"text\" placeholder=\"Search...\" value={search} ref={searchInput} onChange={handleSearch}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import {useState, useEffect} from 'react';\r\n\r\nconst useCharacters = url => {\r\n    const [characters, setCharacters] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => setCharacters(data.results))\r\n    }, [url]);\r\n    \r\n    return characters\r\n}\r\n\r\nexport default useCharacters;","import React, {useState, useReducer, useMemo, useRef, useCallback } from 'react'\r\nimport Search from './Search';\r\nimport useCharacters from '../hooks/useCharacters';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faStar as faStarRegular} from '@fortawesome/free-regular-svg-icons';\r\nimport {faStar as faStarSolid} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst initialState = {\r\n    favorites: []\r\n}\r\nconst API = 'https://rickandmortyapi.com/api/character/';\r\nconst favoriteReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'ADD_TO_FAVORITE':\r\n            return {\r\n                ...state,\r\n                favorites: [...state.favorites, action.payload]\r\n            };\r\n        case 'REMOVE_FROM_FAVORITE':\r\n            return{\r\n                ...state,\r\n                favorites: [\r\n                    ...state.favorites.filter((favorite) => favorite !== action.payload)\r\n                ]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Characters = () => {\r\n    const [favorites, dispatch] = useReducer(favoriteReducer, initialState);\r\n    const [search, setSearch] = useState('');\r\n    const searchInput = useRef(null);\r\n\r\n    const characters = useCharacters(API);\r\n\r\n    const handleClick = favorite => {\r\n        dispatch({\r\n            type: !!isCharacterInFavorites(favorite) ? 'REMOVE_FROM_FAVORITE' : 'ADD_TO_FAVORITE', \r\n            payload: favorite\r\n        })\r\n    }\r\n\r\n    const isCharacterInFavorites = (favorite) =>\r\n        favorites.favorites.find((character) => character.id === favorite.id);\r\n    \r\n\r\n    const handleSearch = useCallback(() => {\r\n        setSearch(searchInput.current.value);\r\n    }, [])\r\n\r\n    const filteredUsers = useMemo(() => \r\n        characters.filter((user) => {\r\n            return user.name.toLowerCase().includes(search.toLowerCase());\r\n        }),\r\n        [characters, search]\r\n    )\r\n\r\n    return (\r\n        <div className=\"characters\">\r\n            <h1>‚≠êFavorites‚≠ê</h1>\r\n            {favorites.favorites.length > 0 ?\r\n               favorites.favorites.map(favorite => (\r\n                <li key={favorite.id}>{favorite.name}</li>\r\n                ))\r\n                : 'No favorite characters ... yet üòâ'\r\n            }\r\n            \r\n            <Search search={search} searchInput={searchInput} handleSearch={handleSearch}/>\r\n            \r\n            <div className=\"container\">\r\n                {filteredUsers.map(character => (\r\n                    <div className=\"item\" key={character.id}>\r\n                        <img src={character.image} alt={character.name} className=\"image\"/>\r\n                        <h2 className=\"name\">\r\n                            {character.name}\r\n                                \r\n                            <FontAwesomeIcon \r\n                                className=\"iconStar\" \r\n                                icon={!!isCharacterInFavorites(character) ? faStarSolid : faStarRegular}  \r\n                                onClick={() => handleClick(character)}\r\n                            />\r\n                        </h2>\r\n                        <div className=\"info\">\r\n                            <p>Status: {character.status}</p>\r\n                            <p>Specie: {character.species}</p>\r\n                            <p>Gender: {character.gender}</p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Characters\r\n","import './App.css';\r\nimport Header from './components/Header';\r\nimport Characters from './components/Characters';\r\nimport ThemeContext from './context/ThemeContext';\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{darkMode, setDarkMode}}>\r\n      <div className={`App ${darkMode ? 'dark' : 'light'}`} >\r\n        <Header/>\r\n        <Characters/>\r\n      </div>\r\n    </ThemeContext.Provider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}